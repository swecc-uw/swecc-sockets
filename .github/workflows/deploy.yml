name: Deploy Sockets Service
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  push_to_dockerhub:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/swecc-sockets:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/swecc-sockets:${{ github.sha }}

  deploy_to_swarm:
    runs-on:
      group: EC2
      labels: [self-hosted, deploy]

    needs: push_to_dockerhub

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Deploy sockets service
      run: |
        if docker service ls | grep -q "sockets"; then

          docker service update \
            --image ${{ secrets.DOCKERHUB_USERNAME }}/swecc-sockets:latest \
            --update-parallelism 1 \
            --update-delay 10s \
            --update-order start-first \
            --update-failure-action rollback \
            --limit-cpu 0.5 \
            --limit-memory 512M \
            --reserve-cpu 0.1 \
            --reserve-memory 128M \
            sockets
        else
          docker service rm sockets || true

          docker config inspect sockets_env --pretty | sed -n '/Data:/,$ p' | sed '1d' > env_file.txt

          docker service create \
            --name sockets \
            --network prod_swecc-network \
            --env-file env_file.txt \
            --mount type=bind,source=/var/run/docker.sock,target=/var/run/docker.sock \
            --replicas 1 \
            --restart-condition any \
            --update-parallelism 1 \
            --update-delay 10s \
            --update-order start-first \
            --update-failure-action rollback \
            --limit-cpu 0.5 \
            --limit-memory 512M \
            --reserve-cpu 0.1 \
            --reserve-memory 128M \
            ${{ secrets.DOCKERHUB_USERNAME }}/swecc-sockets:latest

          # Clean up
          rm env_file.txt
        fi

    - name: Verify deployment
      run: |
        echo "Verifying deployment..."
        timeout=120
        elapsed=0

        while [ $elapsed -lt $timeout ]; do
          if [ $(docker service ls --filter "name=sockets" --format "{{.Replicas}}") == "1/1" ]; then
            echo "✅ Service deployed successfully"
            exit 0
          fi

          echo "⏳ Waiting for service to be fully deployed... ($elapsed/$timeout seconds)"
          sleep 5
          elapsed=$((elapsed + 5))

          if docker service ps sockets --filter "desired-state=running" --format "{{.Error}}" | grep -q .; then
            echo "❌ Deployment failed with errors:"
            docker service ps sockets
            exit 1
          fi
        done

        echo "❌ Deployment verification timed out after $timeout seconds"
        echo "Current service status:"
        docker service ps sockets --no-trunc
        exit 1